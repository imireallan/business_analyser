version: '3.7'

services:
  client:
    image: imireallan/offline_business_analyser_frontend:v3.0.0
    restart: on-failure
    env_file:
      - ./offline-business-analyzer_front-end/.env
    command: npm start
    volumes:
      - ./offline-business-analyzer_front-end:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CI=true
    ports:
      - "3000:3000"
  rest_api: &rest_api
    image: imireallan/offline_business_analyser_backend:v1.0.0
    restart: on-failure
    env_file:
      - ./offline_business_analyzer_API/.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./offline_business_analyzer_API:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
      - celery_worker
  db:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - ./offline_business_analyzer_API/.env
    ports:
      - "5432:5432"
    volumes:
      - ./offline_business_analyzer_API/postgres/data:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:alpine
  celery_worker:
    <<: *rest_api
    command: celery -A offline_business_analyzer worker --loglevel=info
    ports: []
    depends_on:
      - rabbitmq
      - db
  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    depends_on:
      - rabbitmq
